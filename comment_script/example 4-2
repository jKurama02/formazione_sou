
#!/bin/bash
# Naked variables
 
echo
 
# When is a variable "naked", i.e., lacking the '$' in front?
# When it is being assigned, rather than referenced.
 
# Assignment
a=879
echo "The value of \"a\" is $a."
 
# Assignment using 'let'
let a=16+5
echo "The value of \"a\" is now $a."
 
echo
 
# In a 'for' loop (really, a type of disguised assignment):
echo -n "Values of \"a\" in the loop are: "
for a in 7 8 9 11
do
  echo -n "$a "
done

echo "________$a"
 
echo
echo
 
# In a 'read' statement (also a type of assignment):
echo -n "Enter \"a\" "
read a
echo "The value of \"a\" is now $a."
 
echo
 
exit 0


#   crea una variabile a , dopodiche la sovrascrive tramite let (let puo' creare / sovrascrivere)
#   pensavo che echo -n printasse di default la new_line e invece EVITA di scrivere la new_line 
#   il valore di a vine modificato per ogni interazione del ciclo for
#   alla fine viene usata la funzione "read" per leggere il primo argomento passato dallo stdin (ci manca un controllo per verificare che sia effetivamente un numero quello assegnato dall'utente ad 'a' alla fine )
