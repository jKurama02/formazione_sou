---
- name: $ Starrt the circus $
  hosts: all  
  become: yes
  tasks:
    - name: Add official docker repo
      command: dnf config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
      args:
        creates: /etc/yum.repos.d/docker-ce.repo  #to avoid recursive dowloads
    - name: Install Docker
      dnf:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
        state: present
    - name: Install python3-pip 
      dnf: #package manager of system 
        name: python3-pip
        state: present
    - name: Install required Python packages
      ansible.builtin.pip: #package manager of python
        name: requests
        state: present
      become: yes
    - name: Starting docker
      service:
        name: docker
        state: started 
        enabled: true #sudo su
    - name: Chmod docker.sock
      command: sudo chmod 666 /var/run/docker.sock
    - name: Install k3s dependencies
      dnf:
        name:
          - curl
          - iptables
          - iproute
          - sudo
        state: present
    - name: Install k3s
      shell: curl -sfL https://get.k3s.io | sh -
      args:
        creates: /usr/local/bin/k3s
      become: yes

    - name: Chmod k3s.yaml
      command: sudo chmod 666 /etc/rancher/k3s/k3s.yaml
      args:
        creates: /etc/rancher/k3s/k3s.yaml

    - name: Install helm
      become: yes
      shell: |
        curl -LO https://get.helm.sh/helm-v3.14.4-linux-amd64.tar.gz
        tar -zxvf helm-v3.14.4-linux-amd64.tar.gz
        mv linux-amd64/helm /usr/local/bin/helm
    - name: Check if namespace exists
      shell: /usr/local/bin/kubectl get namespace formazione-sou
      register: namespace_check
      failed_when: false
      changed_when: false

    - name: Create Service-account + role + bindrole
      become: yes
      shell: |
        /usr/local/bin/kubectl create namespace formazione-sou
        /usr/local/bin/kubectl create serviceaccount cluster-reader --namespace=formazione-sou
        /usr/local/bin/kubectl create role c-r --namespace=formazione-sou --verb=get --verb=watch --verb=list --resource=deployments
        /usr/local/bin/kubectl create rolebinding bind-c-r --namespace=formazione-sou --role=c-r --serviceaccount=formazione-sou:cluster-reader
      when: namespace_check.rc != 0 # check if namespace exists
    - name: Copy export.sh
      ansible.builtin.copy:
        src: export.sh
        dest: /home/vagrant/
        mode: '0777'
    - name: Copy agent_exec.sh  # BONUS TRACK
      ansible.builtin.copy:
        src: agent_exec.sh
        dest: /home/vagrant/
        mode: '0777'
        
    # - name: Copy jenkins-setup.yaml
    #   ansible.builtin.copy:
    #     src: jenkins-setup.yaml
    #     dest: /home/vagrant/
    #     mode: '0644'
    - name: Create docker-network
      docker_network:
        name: circus_network             
        driver: bridge #default                 
        ipam_config:
        - subnet: 192.168.50.0/24
    - name: Launch Jenkins-master
      community.docker.docker_container: #module who manage docker 
        name: jenkins-master
        image: jenkins/jenkins:latest
        state: started
        restart_policy: always
        ports:
          - "8080:8080" #recommended from repo
          - "50000:50000" #recommended from repo
        networks:
          - name: circus_network  
            ipv4_address: 192.168.50.7
        env:
          JAVA_OPTS: "-Djenkins.model.Jenkins.slaveAgentPort=50000" 
          JENKINS_SLAVE_AGENT_PORT: "50000"
    - name: Chmod k3s.yaml
      ansible.builtin.file:
        path: /etc/rancher/k3s/k3s.yaml
        mode: '0777'
    - name: Update k3s.yaml with correct server IP and remove insecure flag
      become: yes
      shell: |
        sed -i 's|server: https://127.0.0.1:6443|server: https://10.0.2.15:6443|' /etc/rancher/k3s/k3s.yaml
        sed -i '/insecure-skip-tls-verify: true/d' /etc/rancher/k3s/k3s.yaml

    - name: Launch jenkins-agent
      community.docker.docker_container:
        name: jenkins-agent
        image: jenkins/inbound-agent:latest
        state: started 
        restart_policy: always
        env:
          JENKINS_SECRET: "idkeyou"
          JENKINS_URL: "http://192.168.50.7:8080"
          JENKINS_AGENT_NAME: "Pino"
          JENKINS_AGENT_WORKDIR: "/home/jenkins/agent"
          KUBECONFIG: "/home/jenkins/.kube/k3s.yaml"
        volumes:
          - jenkins_slave_home:/home/jenkins/agent
          - /var/run/docker.sock:/var/run/docker.sock
          - /usr/bin/docker:/usr/bin/docker
          - /usr/local/bin/kubectl:/usr/local/bin/kubectl
          - /etc/rancher/k3s/k3s.yaml:/home/jenkins/.kube/k3s.yaml
          - /usr/local/bin/helm:/usr/local/bin/helm
          - /home/vagrant/agent_exec.sh:/home/jenkins/agent_exec.sh:ro
        networks:
          - name: circus_network  
            ipv4_address: 192.168.50.8

